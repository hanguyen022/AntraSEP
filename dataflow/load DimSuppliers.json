{
	"name": "load DimSuppliers",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "IntegratonSuppliers"
				},
				{
					"dataset": {
						"referenceName": "dimSuppliers",
						"type": "DatasetReference"
					},
					"name": "dimSupplierSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dimSuppliers",
						"type": "DatasetReference"
					},
					"name": "dimSuppliers"
				}
			],
			"transformations": [
				{
					"name": "SelectSuppliers"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "JoinOnSupplierID"
				},
				{
					"name": "filterOutInsertRecord"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SupplierSKey as long,",
				"          SupplierID as integer,",
				"          SupplierName as string,",
				"          SupplierCategoryName as string,",
				"          PrimaryContactPersonID as string,",
				"          SupplierReference as string,",
				"          PaymentDays as integer,",
				"          PostalPostalCode as string,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp,",
				"          IngestTime as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> IntegratonSuppliers",
				"source(output(",
				"          {Supplier Key} as integer,",
				"          {WWI Supplier ID} as integer,",
				"          Supplier as string,",
				"          Category as string,",
				"          {Primary Contact} as string,",
				"          {Supplier Reference} as string,",
				"          {Payment Days} as integer,",
				"          {Postal Code} as string,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimSupplierSource",
				"IntegratonSuppliers select(mapColumn(",
				"          {Supplier Key} = SupplierSKey,",
				"          {WWI Supplier ID} = SupplierID,",
				"          Supplier = SupplierName,",
				"          Category = SupplierCategoryName,",
				"          {Primary Contact} = PrimaryContactPersonID,",
				"          {Supplier Reference} = SupplierReference,",
				"          {Payment Days} = PaymentDays,",
				"          {Postal Code} = PostalPostalCode,",
				"          {Valid From} = ValidFrom,",
				"          {Valid To} = ValidTo,",
				"          IngestTime",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectSuppliers",
				"SelectSuppliers alterRow() ~> AlterRow1",
				"IntegratonSuppliers, dimSupplierSource lookup(SupplierID == {WWI Supplier ID},",
				"     multiple: true,",
				"     broadcast: 'auto')~> JoinOnSupplierID",
				"JoinOnSupplierID filter(!isNull({WWI Supplier ID})) ~> filterOutInsertRecord",
				"AlterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Supplier Key} as integer,",
				"          {WWI Supplier ID} as integer,",
				"          Supplier as string,",
				"          Category as string,",
				"          {Primary Contact} as string,",
				"          {Supplier Reference} as string,",
				"          {Payment Days} as integer,",
				"          {Postal Code} as string,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['WWI Supplier ID','Supplier'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          {Supplier Key},",
				"          {WWI Supplier ID},",
				"          Supplier,",
				"          Category,",
				"          {Primary Contact},",
				"          {Supplier Reference},",
				"          {Payment Days},",
				"          {Postal Code},",
				"          {Valid From},",
				"          {Valid To}",
				"     )) ~> dimSuppliers"
			]
		}
	}
}