{
	"name": "SCD Type 2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "integrationSupplier",
						"type": "DatasetReference"
					},
					"name": "IntegrationSupplier"
				},
				{
					"dataset": {
						"referenceName": "dimSupplier",
						"type": "DatasetReference"
					},
					"name": "dimSup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dimSuppliers",
						"type": "DatasetReference"
					},
					"name": "dimSupp"
				}
			],
			"transformations": [
				{
					"name": "ChangeValidFrom"
				},
				{
					"name": "lookupExistingRecords"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SupplierSKey as long,",
				"          SupplierID as integer,",
				"          SupplierName as string,",
				"          SupplierCategoryName as string,",
				"          PrimaryContactPersonID as integer,",
				"          SupplierReference as string,",
				"          PaymentDays as integer,",
				"          PostalPostalCode as string,",
				"          ValidFrom as timestamp,",
				"          ValidTo as timestamp,",
				"          IngestTime as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> IntegrationSupplier",
				"source(output(",
				"          {Supplier Key} as integer,",
				"          {WWI Supplier ID} as integer,",
				"          Supplier as string,",
				"          Category as string,",
				"          {Primary Contact} as string,",
				"          {Supplier Reference} as string,",
				"          {Payment Days} as integer,",
				"          {Postal Code} as string,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimSup",
				"IntegrationSupplier derive(ValidFrom = currentTimestamp()) ~> ChangeValidFrom",
				"IntegrationSupplier, dimSup lookup(SupplierID == {WWI Supplier ID},",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupExistingRecords",
				"ChangeValidFrom sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Supplier Key} as integer,",
				"          {WWI Supplier ID} as integer,",
				"          Supplier as string,",
				"          Category as string,",
				"          {Primary Contact} as string,",
				"          {Supplier Reference} as string,",
				"          {Payment Days} as integer,",
				"          {Postal Code} as string,",
				"          {Valid From} as timestamp,",
				"          {Valid To} as timestamp,",
				"          {Lineage Key} as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> dimSupp"
			]
		}
	}
}