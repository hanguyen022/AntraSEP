{
	"name": "FullLoadGitETL",
	"properties": {
		"activities": [
			{
				"name": "CopyToPurchaseODS",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupInputTables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookupInputTables').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CopyToODS",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "TruncateStaging",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"additionalColumns": [
										{
											"name": "IngestTime",
											"value": {
												"value": "@convertTimeZone(utcNow(),'UTC','Eastern Standard Time')",
												"type": "Expression"
											}
										}
									],
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"enableSkipIncompatibleRow": true,
								"logSettings": {
									"enableCopyActivityLog": true,
									"copyActivityLogSettings": {
										"logLevel": "Warning",
										"enableReliableLogging": false
									},
									"logLocationSettings": {
										"linkedServiceName": {
											"referenceName": "incompatibleDataWhileCopy",
											"type": "LinkedServiceReference"
										}
									}
								},
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "PurchaseTabs",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@item().table_schema",
											"type": "Expression"
										},
										"table": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "CopyToODSOutput",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@item().table_schema",
											"type": "Expression"
										},
										"table": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "TruncateStaging",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": "DECLARE @sql NVARCHAR(max)=''\n\nSELECT @sql += ' Truncate table ' + QUOTENAME(TABLE_SCHEMA) + '.'+ QUOTENAME(TABLE_NAME) + '; '\nFROM   INFORMATION_SCHEMA.TABLES\nWHERE  TABLE_TYPE = 'BASE TABLE'\n\nExec Sp_executesql @sql\n\nSelect * from INFORMATION_SCHEMA.TABLES",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "CopyToODSOutput",
									"type": "DatasetReference",
									"parameters": {
										"schema": {
											"value": "@item().table_schema",
											"type": "Expression"
										},
										"table": {
											"value": "@item().table_name",
											"type": "Expression"
										}
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "LookupInputTables",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT table_schema, table_name \nFROM information_schema.TABLES \nWHERE table_schema= 'Purchasing' \n    or table_name = 'StockItems' \n    or table_name = 'PackageTypes'\n    or table_name = 'TransactionTypes'\n    or table_name = 'PaymentMethods'\n    or table_name = 'People'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "randomWWITab",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "oneTimeSurrogate",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "CopyToPurchaseODS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "oneTimeSurrogate",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "CopyToPurchaseIntegration",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "CreateIntegration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('integrationTabList')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CopyIntegratonTabsToNewDTB",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ODSIntegrationTabs",
									"type": "DatasetReference",
									"parameters": {
										"table": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "IntegrationDTBTabs",
									"type": "DatasetReference",
									"parameters": {
										"table": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "CreateIntegration",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "oneTimeSurrogate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "DECLARE @sql0 NVARCHAR(max)\nSELECT @sql0 += ' Drop table ' + QUOTENAME(TABLE_SCHEMA) + '.'+ QUOTENAME(TABLE_NAME) + '; '\nFROM   INFORMATION_SCHEMA.TABLES\nWHERE  table_schema = 'Integration'\nExec Sp_executesql @sql0\n\nDECLARE @sql nvarchar(max)\nDECLARE @sql2 nvarchar(max)\nSET @sql ='DROP SCHEMA IF EXISTS Integration'\nSET @sql2 = 'CREATE SCHEMA Integration'\nEXEC sp_executesql @sql\nEXEC sp_executesql @sql2\n\nSELECT s.SurKey as SupplierSKey\n\t, s.SupplierID\n\t, s.[SupplierName]\n\t, c.[SupplierCategoryName]\n\t, p.[FullName]\n\t, s.[SupplierReference]\n\t, s.[PaymentDays]\n\t, s.[PostalPostalCode]\n\t, s.[ValidFrom]\n\t, s.[ValidTo]\n\t, s.[IngestTime]\nINTO Integration.Suppliers\nFROM [Purchasing].[Surrogate_Suppliers] s\nLEFT JOIN Purchasing.SupplierCategories c \n\tON s.[SupplierCategoryID] = c.[SupplierCategoryID]\nLEFT JOIN Application.People p\n\tON s.[PrimaryContactPersonID] = p.PersonID\n\nSELECT ol.SurKey as PurchaseSKey\n\t, s.SurKey as SupplierSKey\n\t, si.SurKey as StockItemSKey\n\t, o.[OrderDate]\n\t, o.[PurchaseOrderID]\n\t, ol.[OrderedOuters]\n\t, (si.[QuantityPerOuter]*ol.[OrderedOuters]) as OrderedQuantity\n\t, ol.[ReceivedOuters]\n\t, pt.[PackageTypeName]\n\t, o.[IsOrderFinalized]\n\t, o.[SupplierID]\n\t, ol.[StockItemID]\n\t, o.[LastEditedWhen]\n\t, ol.IngestTime\nINTO Integration.Purchase\nFROM [Purchasing].[Surrogate_PurchaseOrderLines] ol\nLEFT JOIN Purchasing.PurchaseOrders o\n\tON ol.[PurchaseOrderID] = o.[PurchaseOrderID]\nLEFT JOIN Purchasing.Surrogate_Suppliers s\n\tON o.SupplierID = s.SupplierID\nLEFT JOIN Warehouse.Surrogate_StockItems si\n\tON si.StockItemID = ol.StockItemID\nLEFT JOIN Warehouse.PackageTypes pt\n\tON pt.PackageTypeID = ol.PackageTypeID\n\nSELECT t.SurKey as TransSKey\n\t, t.[TransactionDate]\n\t, s.SurKey as SupplierSKey\n\t, att.SurKey as TransactionTypeSKey\n\t, pm.[SurKey] as PaymentMethodSKey\n\t, t.[SupplierTransactionID]\n\t, t.[PurchaseOrderID]\n\t, t.[SupplierInvoiceNumber]\n\t, t.[AmountExcludingTax]\n\t, t.[TaxAmount]\n\t, t.[TransactionAmount]\n\t, t.[OutstandingBalance]\n\t, t.[IsFinalized]\n\t, t.[SupplierID]\n\t, t.[TransactionTypeID]\n\t, t.[PaymentMethodID]\n\t, t.[LastEditedWhen]\n\t, t.IngestTime\nINTO Integration.Transactions\nFROM [Purchasing].[Surrogate_SupplierTransactions] t\nLEFT JOIN Purchasing.Surrogate_Suppliers s\n\tON t.SupplierID = s.SupplierID\nLEFT JOIN Application.Surrogate_TransactionTypes att\n\tON att.TransactionTypeID = t.TransactionTypeID\nLEFT JOIN Application.Surrogate_PaymentMethods pm\n\tON pm.PaymentMethodID = t.PaymentMethodID\n\nSelect * \nINTO Integration.TransactionTypes\nFROM Application.Surrogate_TransactionTypes\n\nSelect * \nINTO Integration.PaymentMethods\nFROM Application.Surrogate_PaymentMethods\n\nSelect *\nINTO Integration.StockItems\nFROM Warehouse.Surrogate_StockItems\n\n\nSELECT * \nFrom Integration.Suppliers",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "RandomODSTab",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "SCD Type 2",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "CopyToPurchaseIntegration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "SCD Type 2",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "fact changing fact",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "SCD Type 2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "1.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "fact changing fact",
						"type": "DataFlowReference"
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "formatForParquet",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "fact changing fact",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "-- DELETE WHITE SPACE IN ALL TABLE NAMES\r\n\r\ndeclare @schema nvarchar(128)\r\ndeclare @table nvarchar(128)\r\ndeclare @cmd nvarchar(500)\r\n\r\ndeclare AllTables cursor for\r\nselect table_schema, table_name from information_schema.tables\r\n   where table_type = 'base table'\r\n\r\nopen AllTables\r\nfetch next from AllTables into @schema, @table\r\nwhile @@fetch_status = 0\r\nbegin\r\n  set @cmd = N'exec sp_rename ' + QUOTENAME(@schema + '.' + @table) + N',' + QUOTENAME(REPLACE(@table, ' ', ''))\r\n  EXEC sp_executeSQL @cmd\r\n  fetch next from AllTables into @schema, @table\r\nend\r\n\r\nclose AllTables\r\ndeallocate AllTables\r\n\r\n\r\n-- DELETE WHITE SPACE IN ALL COLUMNS\r\ndeclare @cmd2 nvarchar(500)\r\ndeclare @column nvarchar(200)\r\n\r\ndeclare AllCols cursor for\r\nselect table_schema, table_name, column_name from information_schema.columns\r\nwhere table_schema != 'sys'\r\n\r\nopen AllCols\r\nfetch next from AllCols into @schema, @table, @column\r\nwhile @@fetch_status = 0\r\nbegin\r\n  set @cmd2 = N'exec sp_rename ' + QUOTENAME(@schema + '.' + @table + '.' + @column) + N',' + QUOTENAME(REPLACE(@column, ' ', ''))\r\n  EXEC sp_executeSQL @cmd2\r\n  fetch next from AllCols into @schema, @table, @column\r\nend\r\n\r\nclose AllCols\r\ndeallocate AllCols\r\n\r\n-- CHANGE Geography DATATYPE TO String\r\n\r\n--ALTER TABLE Dimension.City\r\n--ADD Locations as Location.ToString()\r\n\r\n--ALTER TABLE [Dimension].[City]\r\n--DROP COLUMN Location               --> Cannot drop as Locations is built on this column\r\n\r\nSelect * from Dimension.Supplier ",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "RandomDWTable",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "CopyDWtoADLS",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "formatForParquet",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.cw_items",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy_46b",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "@{item().source.schema}.@{item().source.table}"
								},
								{
									"name": "Destination",
									"value": "wwidw/sqlwwiDW/@{item().destination.fileName}"
								}
							],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"validateDataConsistency": false
							},
							"inputs": [
								{
									"referenceName": "SourceDataset_46b",
									"type": "DatasetReference",
									"parameters": {
										"cw_schema": "@item().source.schema",
										"cw_table": "@item().source.table"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DestinationDataset_46b",
									"type": "DatasetReference",
									"parameters": {
										"cw_fileName": "@item().destination.fileName"
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"cw_items": {
				"type": "array",
				"defaultValue": [
					{
						"source": {
							"schema": "Dimension",
							"table": "Customer"
						},
						"destination": {
							"fileName": "DimensionCustomerwwiDW"
						}
					},
					{
						"source": {
							"schema": "Dimension",
							"table": "Date"
						},
						"destination": {
							"fileName": "DimensionDatewwiDW"
						}
					},
					{
						"source": {
							"schema": "Dimension",
							"table": "Employee"
						},
						"destination": {
							"fileName": "DimensionEmployeewwiDW"
						}
					},
					{
						"source": {
							"schema": "Dimension",
							"table": "PaymentMethod"
						},
						"destination": {
							"fileName": "DimensionPaymentMethodwwiDW"
						}
					},
					{
						"source": {
							"schema": "Dimension",
							"table": "StockItem"
						},
						"destination": {
							"fileName": "DimensionStockItemwwiDW"
						}
					},
					{
						"source": {
							"schema": "Dimension",
							"table": "Supplier"
						},
						"destination": {
							"fileName": "DimensionSupplierwwiDW"
						}
					},
					{
						"source": {
							"schema": "Dimension",
							"table": "TransactionType"
						},
						"destination": {
							"fileName": "DimensionTransactionTypewwiDW"
						}
					},
					{
						"source": {
							"schema": "Fact",
							"table": "Movement"
						},
						"destination": {
							"fileName": "FactMovementwwiDW"
						}
					},
					{
						"source": {
							"schema": "Fact",
							"table": "Order"
						},
						"destination": {
							"fileName": "FactOrderwwiDW"
						}
					},
					{
						"source": {
							"schema": "Fact",
							"table": "Purchase"
						},
						"destination": {
							"fileName": "FactPurchasewwiDW"
						}
					},
					{
						"source": {
							"schema": "Fact",
							"table": "Sale"
						},
						"destination": {
							"fileName": "FactSalewwiDW"
						}
					},
					{
						"source": {
							"schema": "Fact",
							"table": "StockHolding"
						},
						"destination": {
							"fileName": "FactStockHoldingwwiDW"
						}
					},
					{
						"source": {
							"schema": "Fact",
							"table": "Transaction"
						},
						"destination": {
							"fileName": "FactTransactionwwiDW"
						}
					},
					{
						"source": {
							"schema": "Integration",
							"table": "ETLCutoff"
						},
						"destination": {
							"fileName": "IntegrationETLCutoffwwiDW"
						}
					},
					{
						"source": {
							"schema": "Integration",
							"table": "Lineage"
						},
						"destination": {
							"fileName": "IntegrationLineagewwiDW"
						}
					}
				]
			}
		},
		"variables": {
			"integrationTabList": {
				"type": "Array",
				"defaultValue": [
					"Suppliers",
					"Purchase",
					"Transactions",
					"TransactionTypes",
					"PaymentMethods",
					"StockItems"
				]
			}
		},
		"annotations": []
	}
}